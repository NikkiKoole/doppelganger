* Doppel engine & game
** Todo List
   - [-] (World) Figure out culling front to back.
   - [ ] (World) Make sprites for sides looking at various wall formation blocks (think ASCII).
   - [-] (General) read [http://c-faq.com/], and then read it more.

** Engine
*** DONE World
    The world is built in a 3d voxel, minecraft-like way, only more
    crappy, I don't use a 3d engine but instead just have 6 sides of
    the cube I want to look at the world.
    NOTE: I dont really care about the top and bottom side, so I just have 4 sides of the cube to look at.
    this also saves alot in the 2d art that needs to be made.

    The file format is not yet clear, I am thinking just a plain text
    file format.  The world will not be just blocks, because that's too
    minceraft, instead I'll make specific wall 3d tiles (think ASCII
    box drawing but then 3d).

    Instead of just rendering each block I have to figure out some
    culling, (?front to back bounding-box exclusion?) I have ideas about
    some dynamic render-textures that could be helpful.

*** Entities
    There will be a few hundred 'smart' entities and many more dumb
    ones, the smart ones are 'actors' that have collision, AI,
    path-finding, animation and then some more. The dumber ones are
    just static objects in the world, perhaps some of them will have
    some animate-able behaviors.

    Think about state machines to drive animations and perhaps
    transitions Either decide to use just predraw frames (and draw
    them) or put time in skeleton based animation, measure if that's
    feasible though

    The Entities will have a vec3 for position and a vec3 for velocity and a vec3 for facing_direction
    there will be a function that handles updating all these numbers in 1 go.
    The Entities will be animated using pre-drawn frames,
    so from their (AI)state and these vec3's and my current view I should be able to get at the current frame that ought to be visible

    Currently I ought to be fixing the posiiton and how it ties into the World,
    lets assume an Entity can never be outside the bounds of the world.




*** Debug
    Make some very simple UI (Buttons, slider, panels) Use the ASCII
    font for all text come to think of it just use the ASCII font for
    everything, so I cannot waste time worrying about finicky design
    decisions.

    The goal of the UI is just to help with debugging, inspect
    variables during run time, add/update properties and etc.

** Game
